package com.myweb.www.handler;

import java.io.File;
import java.io.IOException;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

import org.apache.tika.Tika;
import org.springframework.stereotype.Component;
import org.springframework.web.multipart.MultipartFile;

import com.myweb.www.domain.FileVO;

import lombok.extern.slf4j.Slf4j;
import net.coobird.thumbnailator.Thumbnails;

@Component
@Slf4j
public class FileHandler {
	//저장할 기본 경로
	private final String UP_DIR = "D:\\_myweb\\_java\\fileupload";
	
	//files를 받아서 경로 설정, 파일 저장, 파일 리스트 리턴
	public List<FileVO> uploadFiles(MultipartFile[] files) {
		List<FileVO> flist = new ArrayList<>();
		//파일 경로, fvo set, 파일 저장...
		//날짜를 폴더로 생성하여 그날 그날 업로드 파일을 관리
		LocalDate date = LocalDate.now(); //localDate 객체
		//날짜를 숫자로 변환
		String today = date.toString(); //2023-10-24(시스템의 날짜)
		//-를 separtor로 변경해서 경로 처리
		today = today.replace("-", File.separator); //2023\10\24(win) 2023/10/24(linux, mac)
		//오늘 날짜로 폴더 생성하기 위한 객체 생성
		File folders = new File(UP_DIR, today);
		
		if(!folders.exists()) {
			//폴더가 없는 경우
			//mkdir : 폴더 하나 생성
			//mkdirs : 하위 폴더 전체 생성
			folders.mkdirs();
		}
		
		//files 객체에 대한 설정
		for(MultipartFile file : files) { //들어온 첨부 파일 1개씩 for문 처리
			FileVO fvo = new FileVO();
			//전체 경로는 설정 되어있기 때문에 today로만(나머지 뒷경로) 설정
			fvo.setSaveDir(today);
			fvo.setFileSize(file.getSize());
			//실제 파일 이름
			String originalFileName = file.getOriginalFilename();
			log.info(">>> original > "+originalFileName);
			//파일 이름에 경로가 존재 할 수도 있음
			String fileName = originalFileName.substring(
					originalFileName.lastIndexOf(File.separator)+1);
			log.info(">>> fileName > "+fileName);
//			2023-10-24 18:13:18,542  INFO [com.myweb.www.handler.FileHandler] >>> original > pig.jpg
//			2023-10-24 18:13:18,542  INFO [com.myweb.www.handler.FileHandler] >>> fileName > pig.jpg
//			2023-10-24 18:13:18,542  INFO [com.myweb.www.handler.FileHandler] >>> original > steve.jpg
//			2023-10-24 18:13:18,542  INFO [com.myweb.www.handler.FileHandler] >>> fileName > steve.jpg
//			2023-10-24 18:13:18,543  INFO [com.myweb.www.handler.FileHandler] >>> original > villager.png
//			2023-10-24 18:13:18,543  INFO [com.myweb.www.handler.FileHandler] >>> fileName > villager.png
			fvo.setFileName(fileName);
			
			//uuid 생성
			UUID uuid = UUID.randomUUID();
			//uuid는 String이 아니어서 변환
			fvo.setUuid(uuid.toString());
			//기본 FileVO 생성 완료-----------------------------------------------------------------------------
			
			//하단부터 디스크에 저장할 파일 객체 생성
			//파일 이름 uuid_fileName		uuid_th_fileName
			String fullFileName = uuid.toString()+"_"+fileName;
			//파일 객체 생성(저장 파일)
			//folders : D:\\_myweb\\_java\\fileupload\\2023\\10\\24\\
			File storeFile = new File(folders, fullFileName);
			//file 객체가 저장이 되려면 첫 경로부터 다 설정이 되어 있어야함
			//D:\\_myweb\\_java\\fileupload\\2023\\10\\24\\uuid_fileName.jpg
		
			try {
				file.transferTo(storeFile); //저장
				//썸네일 생성 => 이미지 파일만 썸네일 생성
				//이미지 파일인지 확인
				if(isImageFile(storeFile)) {
					//이미지 파일인 경우
					fvo.setFileType(1);
					//썸네일 생성
					//th 파일 객체 생성
					File thumbNail = new File(folders,
							uuid.toString()+"_th_"+fileName);
					//storeFiledmf 75 사이즈로 만들고, thumbNail 경로에 저장
					Thumbnails.of(storeFile).size(75, 75).toFile(thumbNail);
				}
			} catch (Exception e) {
				log.debug(">>> file 생성 오류");
				e.printStackTrace();
			}
			//flist에 fvo 추가
			flist.add(fvo);
		}
		return flist;
	}
	
	//내부에서 쓸 메서드 => private
	//파일이 없을 수도 있어서 예외 처리
	//이미지 파일을 썸네일로 만들기 위해 파일 체크
	private boolean isImageFile(File storeFile) throws IOException {
		//mimeType : multimedia
		//해당 파일이 이미지 파일인지 확인
		String mimeType = new Tika().detect(storeFile); //image/jpg
		//첫글자가 image인지 체크
		return mimeType.startsWith("image")? true : false;
	}
}
