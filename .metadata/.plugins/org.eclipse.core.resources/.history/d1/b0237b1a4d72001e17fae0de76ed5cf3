package com.myweb.www.handler;

import java.io.File;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

import org.springframework.stereotype.Component;
import org.springframework.web.multipart.MultipartFile;

import com.myweb.www.domain.FileVO;

import lombok.extern.slf4j.Slf4j;

@Component
@Slf4j
public class FileHandler {
	private final String UP_DIR = "D:\\_myweb\\_java\\fileupload";
	
	//files를 받아서 경로 설정, 파일 저장, 파일 리스트 리턴
	public List<FileVO> uploadFiles(MultipartFile[] files) {
		List<FileVO> flist = new ArrayList<>();
		//파일 경로, fvo set, 파일 저장...
		//날짜를 폴더로 생성하여 그날 그날 업로드 파일을 관리
		LocalDate date = LocalDate.now(); //localDate 객체
		//날짜를 숫자로 변환
		String today = date.toString(); //2023-10-24(시스템의 날짜)
		//-를 separtor로 변경해서 경로 처리
		today = today.replace("-", File.separator); //2023\10\24(win) 2023/10/24(linux, mac)
		//오늘 날짜로 폴더 생성하기 위한 객체 생성
		File folders = new File(UP_DIR, today);
		
		if(!folders.exists()) {
			//폴더가 없는 경우
			//mkdir : 폴더 하나 생성
			//mkdirs : 하위 폴더 전체 생성
			folders.mkdirs();
		}
		
		//files 객체에 대한 설정
		for(MultipartFile file : files) { //들어온 첨부 파일 1개씩 for문 처리
			FileVO fvo = new FileVO();
			//전체 경로는 설정 되어있기 때문에 today로만(나머지 뒷경로) 설정
			fvo.setSaveDir(today);
			fvo.setFileSize(file.getSize());
			//실제 파일 이름
			String originalFileName = file.getOriginalFilename();
			//파일 이름에 경로가 존재 할 수도 있음
			String fileName = originalFileName.substring(
					originalFileName.lastIndexOf(File.separator)+1);
			fvo.setFileName(fileName);
			//uuid 생성
			UUId uuid = UUID.randomUUID();
		}
		return flist;
	}
}
